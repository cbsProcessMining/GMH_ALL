/*DESCRIPTION:
1. Transformation Description:
This transformation creates a table with the following name: _CEL_P2P_CASES

















2. Required Tables:
T001
TCURF_CC
TCURR_CC
TCURX
TMP_P2P_EKKO_EKPO

3. Required Columns:
T001.BUKRS
T001.MANDT
TCURF_CC.FCURR
TCURF_CC.FFACT
TCURF_CC.KURST
TCURF_CC.MANDT
TCURF_CC.TCURR
TCURF_CC.TFACT
TCURF_CC.VALID_END
TCURF_CC.VALID_START
TCURR_CC.FCURR
TCURR_CC.FFACT
TCURR_CC.KURST
TCURR_CC.MANDT
TCURR_CC.TCURR
TCURR_CC.TFACT
TCURR_CC.UKURS
TCURR_CC.VALID_END
TCURR_CC.VALID_START
TCURX.CURRDEC
...
Contact App Store support for the complete list.

4. Columns used for timestamp:
None

5. Parameters used in where clause:
None

6. Parameters used in joins:
exchangeRateType
currency
*/
-- Query No: 1
DROP TABLE IF EXISTS _CEL_P2P_CASES;

-- Query No: 2
CREATE TABLE _CEL_P2P_CASES AS(
SELECT DISTINCT
	E.MANDT
	,E.EBELN
	,E.EBELP
	,E.LIFNR
	,E.BUKRS
	,E.WAERS
	,E.NETWR
    ,E.NETPR
    ,E.BSART
	,CASE 
		WHEN E.WAERS = '<%=currency%>' THEN E.NETWR*ISNULL(TCURX.TDEC,1) 
  		WHEN TCURR_CC.UKURS < 0 THEN (E.NETWR*ISNULL(TCURX.TDEC,1))*(1/ABS(TCURR_CC.UKURS)/(CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END))*(CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
		WHEN TCURR_CC.UKURS > 0 THEN (E.NETWR*ISNULL(TCURX.TDEC,1))*(TCURR_CC.UKURS/CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END*CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
	END AS NETWR_CONVERTED
	,CASE 
		WHEN E.WAERS = '<%=currency%>' THEN E.NETPR*ISNULL(TCURX.TDEC,1) 
  		WHEN TCURR_CC.UKURS < 0 THEN (E.NETPR*ISNULL(TCURX.TDEC,1))*(1/ABS(TCURR_CC.UKURS)/(CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END))*(CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
		WHEN TCURR_CC.UKURS > 0 THEN (E.NETPR*ISNULL(TCURX.TDEC,1))*(TCURR_CC.UKURS/CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END*CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
	END AS NETPR_CONVERTED
FROM 
	TMP_P2P_EKKO_EKPO AS E
	LEFT JOIN TCURR_CC AS TCURR_CC ON 1=1
		AND TCURR_CC.MANDT = E.MANDT
		AND TCURR_CC.TCURR = '<%=currency%>'
		AND TCURR_CC.FCURR = E.WAERS                                             
		AND E.AEDAT >= TCURR_CC.VALID_START AND E.AEDAT < TCURR_CC.VALID_END
        AND TCURR_CC.KURST = '<%=exchangeRateType%>' 
	LEFT JOIN TCURF_CC AS TCURF_CC ON 1=1
		AND TCURR_CC.MANDT = TCURF_CC.MANDT
		AND TCURR_CC.TCURR = TCURF_CC.TCURR
		AND TCURR_CC.FCURR = TCURF_CC.FCURR
		AND TCURR_CC.KURST = TCURF_CC.KURST
        AND E.AEDAT >= TCURF_CC.VALID_START	
		AND E.AEDAT < TCURF_CC.VALID_END
	LEFT JOIN T001 AS T001 ON 1=1
		AND E.MANDT = T001.MANDT
		AND E.BUKRS = T001.BUKRS
	LEFT JOIN (
		SELECT 
			TCURX.CURRKEY
			,CAST(TCURX.CURRDEC AS INT) AS CURRDEC
			,POWER(CAST(10 AS FLOAT),(2-CURRDEC)) AS TDEC 
		FROM 
			TCURX) AS TCURX ON 1=1
		AND TCURR_CC.FCURR = TCURX.CURRKEY
);     
     