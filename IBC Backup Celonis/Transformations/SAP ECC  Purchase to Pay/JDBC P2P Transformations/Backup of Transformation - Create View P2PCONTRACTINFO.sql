/*DESCRIPTION:
1. Transformation Description:
This transformation creates a view with the following name: P2P_CONTRACT_INFO











2. Required Tables:
EKKO
EKPO
P2P_EKPO
_CEL_P2P_CASES

3. Required Columns:
EKKO.AEDAT
EKKO.BSART
EKKO.EBELN
EKKO.KDATE
EKKO.MANDT
EKPO.BSTYP
EKPO.EBELN
EKPO.EBELP
EKPO.KTMNG
EKPO.MANDT
EKPO.MATKL
EKPO.MATNR
EKPO.MEINS
EKPO.ZWERT
P2P_EKPO.EBELN
P2P_EKPO.EBELP
P2P_EKPO.KONNR
P2P_EKPO.KTPNR
P2P_EKPO.MANDT
_CEL_P2P_CASES.EBELN
...
Contact App Store support for the complete list.

4. Columns used for timestamp:
None

5. Parameters used in where clause:
None

6. Parameters used in joins:
None
*/
DROP VIEW IF EXISTS P2P_CONTRACT_INFO;
	
CREATE VIEW P2P_CONTRACT_INFO AS (
SELECT DISTINCT 
	 EKPO_CONTRACT.MANDT
	,EKPO_CONTRACT.EBELN
	,EKPO_CONTRACT.EBELP
	,EKPO_CONTRACT.KTMNG
	,EKPO_CONTRACT.ZWERT
    -- additions START for price analytics 2.0
    ,EKPO_CONTRACT.WERKS
    ,EKPO_CONTRACT.NETPR
    ,EKKO_CONTRACT.LIFNR
    ,EKPO_CONTRACT.PEINH
	,CAST(EKKO_CONTRACT.KDATE AS DATE) AS TS_KDATE
    ,CASE 
		WHEN EKKO_CONTRACT.WAERS = '<%=currency%>' THEN EKPO_CONTRACT.NETPR*ISNULL(TCURX.TDEC,1) 
  		WHEN TCURR_CC.UKURS < 0 THEN (EKPO_CONTRACT.NETPR*ISNULL(TCURX.TDEC,1))*(1/ABS(TCURR_CC.UKURS)/(CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END))*(CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
		WHEN TCURR_CC.UKURS > 0 THEN (EKPO_CONTRACT.NETPR*ISNULL(TCURX.TDEC,1))*(TCURR_CC.UKURS/CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END*CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
	END AS NETPR_CONVERTED
    -- additions END
    ,CAST(EKKO_CONTRACT.KDATB AS DATE) AS TS_KDATB
	,CAST(EKKO_CONTRACT.AEDAT AS DATE) AS TS_AEDAT
	,EKPO_CONTRACT.MEINS
    ,EKPO_CONTRACT.MATKL
    ,EKPO_CONTRACT.MATNR
	,EKPO_CONTRACT.TXZ01
  	,EKPO_CONTRACT.BUKRS
	,EKKO_CONTRACT.BSART
  	,EKPO_CONTRACT.MANDT || EKPO_CONTRACT.EBELN || EKPO_CONTRACT.EBELP AS 'CONTRACT_CASEKEY'
FROM 
	EKPO AS EKPO_CONTRACT
	INNER JOIN EKKO AS EKKO_CONTRACT ON 1=1
  		AND EKPO_CONTRACT.MANDT = EKKO_CONTRACT.MANDT
  		AND EKPO_CONTRACT.EBELN = EKKO_CONTRACT.EBELN
	INNER JOIN P2P_EKPO AS EKPO ON 1=1
		AND EKPO_CONTRACT.MANDT = EKPO.MANDT
		AND EKPO_CONTRACT.EBELN = EKPO.KONNR
		AND EKPO_CONTRACT.EBELP = EKPO.KTPNR
	INNER JOIN _CEL_P2P_CASES AS CASES ON 1=1
		AND EKPO.MANDT = CASES.MANDT
		AND EKPO.EBELN = CASES.EBELN
		AND EKPO.EBELP = CASES.EBELP
	-- ADDED for price analytics contracts
    LEFT JOIN TCURR_CC AS TCURR_CC ON 1=1
		AND TCURR_CC.MANDT = EKKO_CONTRACT.MANDT
		AND TCURR_CC.TCURR = '<%=currency%>'
		AND TCURR_CC.FCURR = EKKO_CONTRACT.WAERS                                             
		AND cast(EKPO_CONTRACT.AEDAT as date) >= cast(TCURR_CC.VALID_START as date) AND cast(EKPO_CONTRACT.AEDAT as date) < cast(TCURR_CC.VALID_END as date)
        AND TCURR_CC.KURST = '<%=exchangeRateType%>' 
    LEFT JOIN TCURF_CC AS TCURF_CC ON 1=1
		AND TCURR_CC.MANDT = TCURF_CC.MANDT
		AND TCURR_CC.TCURR = TCURF_CC.TCURR
		AND TCURR_CC.FCURR = TCURF_CC.FCURR
		AND TCURR_CC.KURST = TCURF_CC.KURST
        AND cast(EKPO_CONTRACT.AEDAT as date) >= cast(TCURF_CC.VALID_START as date)
		AND cast(EKPO_CONTRACT.AEDAT as date) < cast(TCURF_CC.VALID_END as date)
	LEFT JOIN (
		SELECT 
			TCURX.CURRKEY
			,CAST(TCURX.CURRDEC AS INT) AS CURRDEC
			,POWER(CAST(10 AS FLOAT),(2-CURRDEC)) AS TDEC 
		FROM 
			TCURX) AS TCURX ON 1=1
		AND TCURR_CC.FCURR = TCURX.CURRKEY
    -- additions END
WHERE EKPO_CONTRACT.BSTYP = 'K');
